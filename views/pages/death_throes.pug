extends ../layout


block content
    div(class='ui container')
        br
        br

        div(class='project-nav')
            div.ui.three.item.menu
                a(class = 'item active') Documentation
                a(class = 'item') Code
                a(class = 'item') Demo

        br
        br

        div(id='documentation' class='ui vertical text menu')
            h2(class="header item")= 'Navigation'
            a(class='item doc active' id='li-intro').item(href='#Intro' onclick='showDoc("li-intro", "Intro")') Introduction
            a(class='item doc' id='li-project').item(href='#Project' onclick='showDoc("li-project", "Project")') The Project
            a(class='tem doc' id='li-process').item(href='#Process' onclick='showDoc("li-process", "Process")') The Process
            a(class='item doc' id='li-result').item(href='#Result' onclick='showDoc("li-result", "Result")') The Result
            a(class='item doc' id='li-citation').item(href='#Citation' onclick='showDoc("li-citation", "Citation")') Citation
        div(class="ui buttons" style="left: 50%; position: relative; transform: translateX(-50%);")
            a(href='https://github.com/MicMetz/death-throes' class="ui button left attached" style="text-align:center; margin-right: 0.1em;") Git Repo&nbsp;
            a(href='https://webdevgroupcu.org/mime9599/digital-animations/death-throes/dist/' class="ui button right attached" style="text-align:center; margin-left: 0.1em;") Live Demo

            script.
                function showDoc(id, content) {
                    console.log(id);
                    var doc = document.getElementsByClassName('doc');
                    for (var i = 0; i < doc.length; i++) {
                        if (doc[i].id === id) {
                            doc[i].classList.add('active');
                        } else {
                            doc[i].classList.remove('active');
                        }
                    }
                    // var sec = document.getElementsByClassName('section');
                    // for (var i = 0; i < sec.length; i++) {
                    //     if (sec[i].id === content) {
                    //         sec[i].style.display = 'block';
                    //     } else {
                    //         sec[i].style.display = 'none';
                    //     }
                    // }
                }




        div.section#Intro(class='ui piled segment active' style='display: block;')
            h3.ui.segment Introduction
            img(src='documentation/images/DevilDaggers.jpg' alt='Devil Daggers' style='width: 100%;')
            p.ui.segment
                span
                    |    My idea behind Death Throes was heavily influenced by the indie game&nbsp;
                    a(href="https://store.steampowered.com/app/422970/Devil_Daggers/") "Devil Daggers".
                    |    However due to asset limitations, I was unable to create a game that was as visually appealing as the original.
                    |    So I instead settled for a more traditional, yet still visually appealing, approach with a medieval theme under the same concept.
        div.section#Project(class='ui piled segment' style='display: block;')
            h3.ui.segment The Project
            img(src='documentation/images/LobbyCreation.PNG' alt='Lobby Creation' style='width: 100%;')
            p.ui.segment
                span
                    |    The primary assets used in this project were assembled from and with a variety of sources, but the most key asset was&nbsp;
                    a(href="https://www.Unity.com/") Unity's 3D editor.
                br
                br
                span
                    |    Also of note, is the engine behind the game, a javascript WebGL library called&nbsp;
                    a(href="https://threejs.org/") THREE.js.
                    |    This library was used to render the 3D environment, the 3D models, their animations, lighting, and the physics.
                    |    THREE.js was also used to create the UI, which was a combination of HTML and CSS.
                br
                ul
                    li The game logic was created using the&nbsp;
                        a(href="https://en.wikipedia.org/wiki/Observer_pattern") Observer Pattern.

                    li The UI was created using the&nbsp;
                        a(href="https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller") MVC Pattern.

                    li The user input was created using the&nbsp;
                        a(href="https://en.wikipedia.org/wiki/Command_pattern") Command Pattern.
                br
                br
            video(src='documentation/videos/orc.mp4' controls style='width: 100%;' autoplay muted loop)

        div.section#Process(class='ui piled segment' style='display: block;')
            h3.ui.segment The Process
            ul.ui.segment(style='list-style-type: circle; padding-left: 2em;')
                span    The process of creating this project was a long and arduous one, but it was also a very addictively enjoyable one.
                li    The first step was to create the 3D models for the game, which was done using Blender.
                li    The next step was to create the animations for the 3D models, which was done using Mixamo, and Unity.
                li    The next step was to create the 3D environment, which was done using Unity and Adobe Photoshop.
                li    The next step was to create the UI, which was done using HTML and the JavaScript library&nbsp;
                        a(href="hammerjs.github.io/") Hammer.js.
                li    The next step was to create the game logic, which was done using JavaScript.
                li    The next step was to create the user input, which was done using JavaScript.
                li    The next step was to create the physics, which was done using Cannon.js.
                li    The audio was done using Audacity.
                li    The building of deliverables was done using Webpack.

            br
            br

            h3.ui.segment Animation Creation & The Frustrations that Come With It
            video(src='documentation/videos/mistakes.mp4' controls style='width: 100%;' autoplay muted loop)
            br

            p.ui.segment
                span
                |    The process of creating the animations for the 3D models was a very frustrating one.

        //div(id='code' class='ui stacked segment' style='display: none;')
        div(id='code' class='ui stacked segment' style='display: none;')
            h2(class="ui header")= 'Code'

            p
                span
                    | The code for this project is available on GitHub.
                    a(href='https://github.com/MicMetz/death-throes') GitHub Repository


        //div(id='demo' class='ui stacked segment' style='display: none;')
        div(id='demo' class='ui stacked segment' style='display: none;')
            h2(class="ui header")= 'Demo'
            p
                span
                    | The demo for this project is available on the web.
                    a(href='https://webdevgroupcu.org/mime9599/digital-animations/death-throes/dist/') Live Demo

